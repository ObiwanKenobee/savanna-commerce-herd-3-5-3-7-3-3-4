# ü¶Å Savanna Marketplace Kubernetes Deployment
# Optimized for East African infrastructure

apiVersion: apps/v1
kind: Deployment
metadata:
  name: savanna-marketplace
  namespace: production
  labels:
    app: savanna-marketplace
    version: v1
    wildlife: lion
    region: east-africa
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: savanna-marketplace
  template:
    metadata:
      labels:
        app: savanna-marketplace
        version: v1
        wildlife: lion
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: savanna-marketplace
          image: ghcr.io/your-org/savanna-marketplace:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: ENVIRONMENT
              value: "production"
            - name: REGION
              value: "kenya-east"
            - name: WILDLIFE_THEME
              value: "enabled"
          envFrom:
            - secretRef:
                name: savanna-marketplace-secrets
            - configMapRef:
                name: savanna-marketplace-config
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache/nginx
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      securityContext:
        fsGroup: 1001
      nodeSelector:
        wildlife.savanna.io/optimized: "true"
      tolerations:
        - key: "wildlife.savanna.io/lion-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: savanna-marketplace-service
  namespace: production
  labels:
    app: savanna-marketplace
    wildlife: lion
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: savanna-marketplace

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: savanna-marketplace-config
  namespace: production
data:
  WILDLIFE_THEME: "enabled"
  REGION: "kenya-east"
  LOG_LEVEL: "info"
  METRICS_ENABLED: "true"
  CACHE_TTL: "3600"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: savanna-marketplace-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - savanna-marketplace.com
        - www.savanna-marketplace.com
      secretName: savanna-marketplace-tls
  rules:
    - host: savanna-marketplace.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: savanna-marketplace-service
                port:
                  number: 80
    - host: www.savanna-marketplace.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: savanna-marketplace-service
                port:
                  number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: savanna-marketplace-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: savanna-marketplace
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
