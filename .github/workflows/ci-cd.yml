name: 🦁 Savanna Marketplace CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"
  REGISTRY: ghcr.io
  IMAGE_NAME: savanna-marketplace

jobs:
  # 🧪 Testing Phase
  test:
    name: 🔬 Run Tests & Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🧹 Lint Code (ESLint)
        run: npm run lint

      - name: 🎨 Check Formatting (Prettier)
        run: npm run format:check

      - name: 🔍 Type Check (TypeScript)
        run: npm run type-check

      - name: 🧪 Run Unit Tests
        run: npm run test:unit

      - name: 🌐 Run E2E Tests
        run: npm run test:e2e

      - name: 📊 Generate Test Coverage
        run: npm run test:coverage

      - name: 📈 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # 🛡️ Security Scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Run Security Audit
        run: npm audit --audit-level high

      - name: 🛡️ Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # 🏗️ Build Phase
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Production App
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: 📁 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # 🐳 Docker Build & Push
  docker:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 📁 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🔐 Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # 🚀 Deploy to Staging
  deploy-staging:
    name: 🦓 Deploy to Staging (Kenya-East)
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging.savanna-marketplace.com
    steps:
      - name: 🚀 Deploy to Staging
        run: |
          echo "🦓 Deploying to Staging Environment..."
          echo "🌍 Region: Kenya-East (Nairobi)"
          # Add your deployment commands here

  # 🦁 Deploy to Production
  deploy-production:
    name: 🦁 Deploy to Production (Multi-Region)
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://savanna-marketplace.com
    steps:
      - name: 🦁 Deploy to Production
        run: |
          echo "🦁 Deploying to Production Environment..."
          echo "🌍 Regions: Kenya-East, Kenya-West, Uganda-Central"
          echo "🔄 Rolling deployment with zero downtime..."
          # Add your deployment commands here

      - name: 🔔 Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: "#deployments"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  # 🌊 Performance Testing
  performance:
    name: 🚀 Performance Testing
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4

      - name: 🌊 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: "./lighthouse.config.js"
          uploadArtifacts: true

      - name: ⚡ Load Testing with K6
        run: |
          echo "⚡ Running load tests for critical user journeys..."
          echo "🛒 Cart checkout flow"
          echo "💰 M-Pesa payment flow"
          echo "📦 Order tracking flow"
